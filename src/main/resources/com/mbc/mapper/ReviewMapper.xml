<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.mbc.mapper.ReviewMapper">
	
	<insert id="register">
		insert into Reviews (rno, pno, uno, r_content, r_img_path, r_img_name, r_img_o_name)
		values (seq_rno.nextval, #{pno}, #{uno}, #{r_content},
		 	#{r_img_path, jdbcType=VARCHAR}, 
            #{r_img_name, jdbcType=VARCHAR}, 
            #{r_img_o_name, jdbcType=VARCHAR} )
	</insert>

	<select id="read" resultType="com.mbc.domain.ReviewVO">
		 select * from reviews where rno = #{rno}
		<!-- select r.rno, p.p_title, u.id, r_content, r_regdate
		from reviews r, products p, users u; -->
	</select>
	
	<delete id="delete">
		delete from reviews where rno = #{rno}
	</delete>
	
	<update id="update">
		update reviews 
		set r_content= #{r_content},
		r_updatedate = sysdate 
		where rno = #{rno}
	</update>
	
	<select id="getListWithPaging" resultType="com.mbc.domain.ReviewVO">
		select * from reviews
	    order by rno desc
	</select>
	
	<select id="getReviewListByUno" resultType="com.mbc.domain.ReviewVO">
	   SELECT 
	       r.rno, 
	       r.pno, 
	       r.uno, 
	       r.r_content, 
	       r.r_img_path, 
	       r.r_img_name, 
	       r.r_img_o_name, 
	       r.r_regdate, 
	       r.r_updatedate, 
	       p.p_title AS productTitle,   -- 상품명
	       u.id AS sellerId             -- 판매자 ID
	   FROM Reviews r
	   LEFT JOIN Products p ON r.pno = p.pno
	   LEFT JOIN Users u ON r.uno = u.uno  -- 판매자 정보 가져오기
	   WHERE r.uno = #{uno}
	   ORDER BY r.r_regdate DESC
	</select>
	
		 
</mapper>

